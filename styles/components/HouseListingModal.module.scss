@use "../mixins";
@use "../colors";
@use "../Home.module.scss" as home;

.wrapper {
    height: 100%;
    width: calc(100vw - 144px);

    max-width: 1248px;
    margin: 0px auto;
    background-color: white;

    overflow-y: auto;
    padding: 0 24px;

    @media (max-width: 1024px) {
        width: 100%;
    }
}
.header {
    position: sticky;
    height: home.$headerHeight;

    @include mixins.flex(r, nw, space-between, c);

    @media screen and (max-width: 450px) {
        justify-content: space-around;
    }
    
}
.header .closeLink {
    flex: 1;
    @include mixins.flex(r, nw, fs, c);

    font-size: 18px;
    font-weight: 500;

    @media screen and (max-width: 450px) {
        &:not(:first-of-type) { visibility: hidden; display: none }
    }
}
.closeLinkWrapper {
    @include mixins.flex(r, nw, fs, c);
    & > div {
        margin-left: 8px;
    }
    &:hover {
        text-decoration: underline;
    }
}
.headerTitle {
    font-size: 54px;
    font-variant-caps: small-caps;
    color: colors.$primaryColor;
}
.contentWrapper {
    position: relative;
}
.imagesContainer {
    height: 445px;
    margin: 20px 0;

    border-radius: 20px;
    overflow: hidden;
    display: grid;

    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 6px;

    & > li {
        @include mixins.flex(r, nw, c, c);
        width: auto;
        overflow: hidden;
    }
    & > li:first-of-type { grid-area: 1 / 1 / 3 / 3; }
    & > li:nth-of-type(2) { grid-area: 1 / 3 / 2 / 4; }
    & > li:nth-of-type(3) { grid-area: 1 / 4 / 2 / 5; }
    & > li:nth-of-type(4) { grid-area: 2 / 3 / 3 / 4; }
    & > li:nth-of-type(5) { grid-area: 2 / 4 / 3 / 5; }

    @media screen and (max-width: 900px) {
        grid-template-columns: repeat(3, 1fr);

        & > li:nth-of-type(1) { grid-area: 1 / 1 / 3 / 3; }
        & > li:nth-of-type(2) { grid-area: 1 / 3 / 2 / 4; }
        & > li:nth-of-type(3) { grid-area: 2 / 3 / 2 / 4; }

        & > li:nth-of-type(n+4) { display: none;}
    }

    @media screen and (max-width: 560px) {
        grid-template-columns: 1fr;
        & > li:nth-of-type(n+2) {
            display: none;
        }
    }
}
.infoContainer {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    grid-template-rows: auto;
    grid-column-gap: 0px;
    grid-row-gap: 0px;
    
    & > div:nth-of-type(odd) {
        font-size: 32px;
        font-weight: 700;
    }
    & > div:nth-of-type(even) {
        font-size: 20px;
        font-weight: 400;
    }
    
    & > div:nth-of-type(1) { grid-area: 1 / 1 / 2 / 5; }
    & > div:nth-of-type(2) { grid-area: 2 / 1 / 3 / 5; }
    & > div:nth-of-type(3) { grid-area: 1 / 5 / 2 / 6; }
    & > div:nth-of-type(4) { grid-area: 2 / 5 / 3 / 6; }
    & > div:nth-of-type(5) { grid-area: 1 / 6 / 2 / 7; }
    & > div:nth-of-type(6) { grid-area: 2 / 6 / 3 / 7; }
    & > div:nth-of-type(7) { grid-area: 1 / 7 / 2 / 8; }
    & > div:nth-of-type(8) { grid-area: 2 / 7 / 3 / 8; }

    @media screen and (max-width: 560px) {
        grid-template-columns: 1fr;
        grid-template-rows: repeat(6, auto);

        & > div:nth-of-type(1) { grid-area: 1 / 1 / 2 / 2; }
        & > div:nth-of-type(2) { grid-area: 2 / 1 / 3 / 2; }
        & > div:nth-of-type(3) { grid-area: 3 / 1 / 4 / 2; }
        & > div:nth-of-type(4) { grid-area: 4 / 1 / 5 / 2; }
        & > div:nth-of-type(5) { grid-area: 5 / 1 / 6 / 2; }
        & > div:nth-of-type(6) { grid-area: 6 / 1 / 7 / 2; }
        & > div:nth-of-type(7) { grid-area: 7 / 1 / 8 / 2; }
        & > div:nth-of-type(8) { grid-area: 8 / 1 / 9 / 2; }
    }

}
.addressContainer {
    grid-area: address;
    text-transform: capitalize;

    overflow: shown;
    
    @include mixins.flex(r, w, fs, fs);
    & > div {
        padding-right: 3px;
    }

    & > div::after {
        content: ', '
    }
    & > div:last-child::after {
        content: ''
    }
}